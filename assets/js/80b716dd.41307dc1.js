"use strict";(self.webpackChunkpayangel_api_docs=self.webpackChunkpayangel_api_docs||[]).push([[387],{887:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>c});var r=a(758);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}},3147:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/javascript/examples","title":"JavaScript Code Examples","description":"This section provides examples of how to use the PayAngel API with JavaScript.","source":"@site/docs/api/javascript/examples.md","sourceDirName":"api/javascript","slug":"/api/javascript/examples","permalink":"/payangel-api-docs/docs/api/javascript/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/payincgroupltd/payangel-api-docs/tree/main/docs/api/javascript/examples.md","tags":[],"version":"current","frontMatter":{"id":"examples","title":"JavaScript Code Examples","sidebar_label":"JavaScript Examples","slug":"/api/javascript/examples"},"sidebar":"apiSidebar","previous":{"title":"Abort Transaction","permalink":"/payangel-api-docs/docs/api/cash-pickup/abort"},"next":{"title":"TypeScript Examples","permalink":"/payangel-api-docs/docs/api/typescript/examples"}}');var s=a(6070),t=a(887);const o={id:"examples",title:"JavaScript Code Examples",sidebar_label:"JavaScript Examples",slug:"/api/javascript/examples"},c="JavaScript Code Examples",i={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Get Account Balance",id:"get-account-balance",level:2},{value:"Single Disbursement",id:"single-disbursement",level:2},{value:"Bulk Disbursement",id:"bulk-disbursement",level:2},{value:"Check Transaction Status",id:"check-transaction-status",level:2},{value:"List Transactions",id:"list-transactions",level:2},{value:"Cancel Transaction",id:"cancel-transaction",level:2},{value:"Webhook Handler Example",id:"webhook-handler-example",level:2},{value:"Complete NodeJS Project Structure",id:"complete-nodejs-project-structure",level:2},{value:"Error Handling",id:"error-handling",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"javascript-code-examples",children:"JavaScript Code Examples"})}),"\n",(0,s.jsx)(n.p,{children:"This section provides examples of how to use the PayAngel API with JavaScript."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js 12.x or higher"}),"\n",(0,s.jsx)(n.li,{children:"npm or yarn package manager"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Install the required dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install axios\n# or\nyarn add axios\n"})}),"\n",(0,s.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const axios = require('axios');\n\n// Configure API key\nconst API_KEY = 'your_api_key_here';\n\n// Create axios instance with default headers\nconst payAngel = axios.create({\n  baseURL: 'https://api.payangel.com/v1',\n  headers: {\n    'Authorization': `Bearer ${API_KEY}`,\n    'Content-Type': 'application/json'\n  }\n});\n\n// Test authentication\nasync function testConnection() {\n  try {\n    const response = await payAngel.get('/accounts');\n    console.log('Connection successful!', response.data);\n  } catch (error) {\n    console.error('Authentication failed:', error.response?.data || error.message);\n  }\n}\n\ntestConnection();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"get-account-balance",children:"Get Account Balance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function getAccountBalance() {\n  try {\n    const response = await payAngel.get('/accounts/balance');\n    console.log('Account Balance:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching balance:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\ngetAccountBalance();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"single-disbursement",children:"Single Disbursement"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function createSingleDisbursement() {\n  try {\n    const disbursementData = {\n      reference: `payment-${Date.now()}`, // Generate unique reference\n      amount: 1000,\n      currency: 'GHS',\n      source_account: 'acc_123456789',\n      destination_type: 'bank_account',\n      recipient: {\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        phone: '+233501234567',\n        bank_code: 'GH123456',\n        account_number: '1234567890'\n      },\n      narration: 'Salary payment',\n      callback_url: 'https://your-website.com/webhooks/payangel'\n    };\n    \n    const response = await payAngel.post('/disbursements/single', disbursementData);\n    console.log('Disbursement created:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating disbursement:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\ncreateSingleDisbursement();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"bulk-disbursement",children:"Bulk Disbursement"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function createBulkDisbursement() {\n  try {\n    const bulkData = {\n      batch_reference: `batch-${Date.now()}`, // Generate unique batch reference\n      source_account: 'acc_123456789',\n      callback_url: 'https://your-website.com/webhooks/payangel',\n      transactions: [\n        {\n          reference: `tx1-${Date.now()}`,\n          amount: 1000,\n          currency: 'GHS',\n          destination_type: 'bank_account',\n          recipient: {\n            name: 'John Doe',\n            email: 'john.doe@example.com',\n            phone: '+233501234567',\n            bank_code: 'GH123456',\n            account_number: '1234567890'\n          },\n          narration: 'Salary payment'\n        },\n        {\n          reference: `tx2-${Date.now()}`,\n          amount: 500,\n          currency: 'GHS',\n          destination_type: 'mobile_money',\n          recipient: {\n            name: 'Jane Smith',\n            phone: '+233507654321',\n            mobile_network: 'MTN',\n            mobile_number: '0507654321'\n          },\n          narration: 'Commission payment'\n        }\n      ]\n    };\n    \n    const response = await payAngel.post('/disbursements/bulk', bulkData);\n    console.log('Bulk disbursement created:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating bulk disbursement:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\ncreateBulkDisbursement();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"check-transaction-status",children:"Check Transaction Status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function checkTransactionStatus(transactionId) {\n  try {\n    const response = await payAngel.get(`/disbursements/${transactionId}`);\n    console.log('Transaction status:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error checking status:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\ncheckTransactionStatus('txn_123456789');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"list-transactions",children:"List Transactions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function listTransactions(page = 1, limit = 20) {\n  try {\n    const response = await payAngel.get('/disbursements', {\n      params: {\n        page,\n        limit\n      }\n    });\n    console.log('Transactions:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error listing transactions:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\nlistTransactions();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cancel-transaction",children:"Cancel Transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function cancelTransaction(transactionId) {\n  try {\n    const response = await payAngel.post(`/disbursements/${transactionId}/cancel`);\n    console.log('Transaction cancelled:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error cancelling transaction:', error.response?.data || error.message);\n    throw error;\n  }\n}\n\ncancelTransaction('txn_123456789');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"webhook-handler-example",children:"Webhook Handler Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const express = require('express');\nconst bodyParser = require('body-parser');\nconst crypto = require('crypto');\n\nconst app = express();\napp.use(bodyParser.json());\n\nconst WEBHOOK_SECRET = 'your_webhook_secret_here';\n\n// Verify webhook signature\nfunction verifySignature(payload, signature) {\n  const hmac = crypto.createHmac('sha256', WEBHOOK_SECRET);\n  const digest = hmac.update(JSON.stringify(payload)).digest('hex');\n  return crypto.timingSafeEqual(\n    Buffer.from(digest),\n    Buffer.from(signature)\n  );\n}\n\napp.post('/webhooks/payangel', (req, res) => {\n  const signature = req.headers['x-payangel-signature'];\n  \n  // Verify webhook signature\n  if (!signature || !verifySignature(req.body, signature)) {\n    console.error('Invalid webhook signature');\n    return res.status(401).send('Invalid signature');\n  }\n  \n  const { event, data } = req.body;\n  \n  // Handle different event types\n  switch (event) {\n    case 'disbursement.pending':\n      console.log('Transaction pending:', data.transaction_id);\n      break;\n    case 'disbursement.processing':\n      console.log('Transaction processing:', data.transaction_id);\n      break;\n    case 'disbursement.completed':\n      console.log('Transaction completed:', data.transaction_id);\n      // Update your database or notify your users\n      break;\n    case 'disbursement.failed':\n      console.log('Transaction failed:', data.transaction_id, data.failure_reason);\n      // Handle the failure\n      break;\n    default:\n      console.log('Unhandled event:', event);\n  }\n  \n  // Acknowledge receipt of the webhook\n  res.status(200).send('Webhook received');\n});\n\nconst PORT = 3000;\napp.listen(PORT, () => {\n  console.log(`Webhook server listening on port ${PORT}`);\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"complete-nodejs-project-structure",children:"Complete NodeJS Project Structure"}),"\n",(0,s.jsx)(n.p,{children:"Here's a recommended project structure for a Node.js application using the PayAngel API:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"payangel-integration/\n\u251c\u2500\u2500 .env                  # Environment variables\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 config.js         # Configuration and environment setup\n\u2502   \u251c\u2500\u2500 payangel/\n\u2502   \u2502   \u251c\u2500\u2500 client.js     # PayAngel API client\n\u2502   \u2502   \u251c\u2500\u2500 disbursement.js # Disbursement-specific methods\n\u2502   \u2502   \u2514\u2500\u2500 webhook.js    # Webhook handler\n\u2502   \u251c\u2500\u2500 server.js         # Express server for webhooks\n\u2502   \u2514\u2500\u2500 index.js          # Main application entry point\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 payangel.test.js  # Tests for PayAngel integration\n"})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function makeApiCall(apiFunction) {\n  try {\n    return await apiFunction();\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('API Error:', error.response.status, error.response.data);\n      \n      // Handle specific error codes\n      switch (error.response.status) {\n        case 401:\n          console.error('Authentication failed. Check your API key.');\n          break;\n        case 400:\n          console.error('Invalid request:', error.response.data.message);\n          break;\n        case 429:\n          console.error('Rate limit exceeded. Please try again later.');\n          break;\n        case 500:\n          console.error('PayAngel server error. Please try again later.');\n          break;\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Request error:', error.message);\n    }\n    \n    throw error;\n  }\n}\n\n// Usage\nmakeApiCall(() => payAngel.get('/accounts/balance'))\n  .then(data => console.log('Success:', data))\n  .catch(() => console.log('Operation failed.'));\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);