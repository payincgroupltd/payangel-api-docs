"use strict";(self.webpackChunkpayangel_api_docs=self.webpackChunkpayangel_api_docs||[]).push([[186],{887:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(758);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},6843:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/webhooks","title":"Webhooks","description":"PayAngel uses webhooks to notify your application when events happen in your account. Webhooks are particularly useful for tracking the status of disbursement transactions, which may change from PENDING to PROCESSING to COMPLETED or FAILED.","source":"@site/docs/api/webhooks.md","sourceDirName":"api","slug":"/api/webhooks","permalink":"/payangel-api-docs/docs/api/webhooks","draft":false,"unlisted":false,"editUrl":"https://github.com/payincgroupltd/payangel-api-docs/tree/main/docs/api/webhooks.md","tags":[],"version":"current","frontMatter":{"id":"webhooks","title":"Webhooks","sidebar_label":"Webhooks","slug":"/api/webhooks"},"sidebar":"apiSidebar","previous":{"title":"Errors","permalink":"/payangel-api-docs/docs/api/errors"}}');var o=t(6070),s=t(887);const a={id:"webhooks",title:"Webhooks",sidebar_label:"Webhooks",slug:"/api/webhooks"},i="Webhooks",c={},d=[{value:"Setting Up Webhooks",id:"setting-up-webhooks",level:2},{value:"Webhook Events",id:"webhook-events",level:2},{value:"Webhook Payload",id:"webhook-payload",level:2},{value:"Webhook Security",id:"webhook-security",level:2},{value:"Verifying Webhook Signatures",id:"verifying-webhook-signatures",level:3},{value:"JavaScript",id:"javascript",level:4},{value:"TypeScript",id:"typescript",level:4},{value:"Go",id:"go",level:4},{value:"Java",id:"java",level:4},{value:"Best Practices for Webhooks",id:"best-practices-for-webhooks",level:2},{value:"Testing Webhooks",id:"testing-webhooks",level:2},{value:"Example with ngrok",id:"example-with-ngrok",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"webhooks",children:"Webhooks"})}),"\n",(0,o.jsxs)(n.p,{children:["PayAngel uses webhooks to notify your application when events happen in your account. Webhooks are particularly useful for tracking the status of disbursement transactions, which may change from ",(0,o.jsx)(n.code,{children:"PENDING"})," to ",(0,o.jsx)(n.code,{children:"PROCESSING"})," to ",(0,o.jsx)(n.code,{children:"COMPLETED"})," or ",(0,o.jsx)(n.code,{children:"FAILED"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"setting-up-webhooks",children:"Setting Up Webhooks"}),"\n",(0,o.jsx)(n.p,{children:"You can register a webhook URL in two ways:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"In the Dashboard"}),": Log in to your PayAngel dashboard and navigate to the Developer > Webhook settings page."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Per Transaction"}),": Include a ",(0,o.jsx)(n.code,{children:"callback_url"})," parameter when creating single or bulk disbursements."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"webhook-events",children:"Webhook Events"}),"\n",(0,o.jsx)(n.p,{children:"The PayAngel API sends webhook notifications for the following events:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Event"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"disbursement.pending"})}),(0,o.jsx)(n.td,{children:"A disbursement has been created and is pending processing"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"disbursement.processing"})}),(0,o.jsx)(n.td,{children:"A disbursement is being processed"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"disbursement.completed"})}),(0,o.jsx)(n.td,{children:"A disbursement has been successfully completed"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"disbursement.failed"})}),(0,o.jsx)(n.td,{children:"A disbursement has failed"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"disbursement.cancelled"})}),(0,o.jsx)(n.td,{children:"A disbursement has been cancelled"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"webhook-payload",children:"Webhook Payload"}),"\n",(0,o.jsx)(n.p,{children:"Webhook payloads are sent as HTTP POST requests with a JSON body. Here's an example of a webhook payload:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "event": "disbursement.completed",\n  "data": {\n    "transaction_id": "txn_123456789",\n    "reference": "your-reference",\n    "status": "COMPLETED",\n    "amount": 1000,\n    "currency": "GHS",\n    "fee": 10,\n    "total": 1010,\n    "created_at": "2023-06-15T14:30:00Z",\n    "updated_at": "2023-06-15T15:30:00Z",\n    "completed_at": "2023-06-15T15:30:00Z"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"webhook-security",children:"Webhook Security"}),"\n",(0,o.jsxs)(n.p,{children:["To ensure that webhook requests are coming from PayAngel, we include a signature in the ",(0,o.jsx)(n.code,{children:"X-PayAngel-Signature"})," header. You should verify this signature to confirm the authenticity of the webhook."]}),"\n",(0,o.jsx)(n.h3,{id:"verifying-webhook-signatures",children:"Verifying Webhook Signatures"}),"\n",(0,o.jsx)(n.p,{children:"The signature is a HMAC-SHA256 hash of the JSON payload, using your webhook secret as the key. Here's how to verify the signature:"}),"\n",(0,o.jsx)(n.h4,{id:"javascript",children:"JavaScript"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const crypto = require('crypto');\n\nfunction verifyWebhookSignature(payload, signature, secret) {\n  const computedSignature = crypto\n    .createHmac('sha256', secret)\n    .update(JSON.stringify(payload))\n    .digest('hex');\n  \n  return crypto.timingSafeEqual(\n    Buffer.from(computedSignature),\n    Buffer.from(signature)\n  );\n}\n\n// Example usage in an Express.js app\napp.post('/webhooks/payangel', (req, res) => {\n  const signature = req.headers['x-payangel-signature'];\n  const payload = req.body;\n  const secret = 'your_webhook_secret';\n  \n  if (!signature || !verifyWebhookSignature(payload, signature, secret)) {\n    console.error('Invalid webhook signature');\n    return res.status(401).send('Invalid signature');\n  }\n  \n  // Process the webhook\n  const { event, data } = payload;\n  \n  switch (event) {\n    case 'disbursement.completed':\n      // Handle completed disbursement\n      console.log(`Transaction ${data.transaction_id} completed`);\n      break;\n    case 'disbursement.failed':\n      // Handle failed disbursement\n      console.log(`Transaction ${data.transaction_id} failed`);\n      break;\n    // Handle other events\n  }\n  \n  // Acknowledge receipt of the webhook\n  res.status(200).send('Webhook received');\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"typescript",children:"TypeScript"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import * as crypto from 'crypto';\nimport express from 'express';\n\ninterface WebhookPayload {\n  event: string;\n  data: {\n    transaction_id: string;\n    reference: string;\n    status: string;\n    amount: number;\n    currency: string;\n    [key: string]: any;\n  };\n}\n\nfunction verifyWebhookSignature(payload: any, signature: string, secret: string): boolean {\n  const computedSignature = crypto\n    .createHmac('sha256', secret)\n    .update(JSON.stringify(payload))\n    .digest('hex');\n  \n  return crypto.timingSafeEqual(\n    Buffer.from(computedSignature),\n    Buffer.from(signature)\n  );\n}\n\nconst app = express();\napp.use(express.json());\n\napp.post('/webhooks/payangel', (req, res) => {\n  const signature = req.headers['x-payangel-signature'] as string;\n  const payload = req.body as WebhookPayload;\n  const secret = 'your_webhook_secret';\n  \n  if (!signature || !verifyWebhookSignature(payload, signature, secret)) {\n    console.error('Invalid webhook signature');\n    return res.status(401).send('Invalid signature');\n  }\n  \n  // Process the webhook\n  const { event, data } = payload;\n  \n  switch (event) {\n    case 'disbursement.completed':\n      // Handle completed disbursement\n      console.log(`Transaction ${data.transaction_id} completed`);\n      break;\n    case 'disbursement.failed':\n      // Handle failed disbursement\n      console.log(`Transaction ${data.transaction_id} failed`);\n      break;\n    // Handle other events\n  }\n  \n  // Acknowledge receipt of the webhook\n  res.status(200).send('Webhook received');\n});\n\napp.listen(3000, () => {\n  console.log('Webhook server listening on port 3000');\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"go",children:"Go"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"crypto/hmac"\n\t"crypto/sha256"\n\t"encoding/hex"\n\t"encoding/json"\n\t"fmt"\n\t"io/ioutil"\n\t"log"\n\t"net/http"\n)\n\ntype WebhookPayload struct {\n\tEvent string `json:"event"`\n\tData  struct {\n\t\tTransactionID string  `json:"transaction_id"`\n\t\tReference     string  `json:"reference"`\n\t\tStatus        string  `json:"status"`\n\t\tAmount        float64 `json:"amount"`\n\t\tCurrency      string  `json:"currency"`\n\t} `json:"data"`\n}\n\nfunc verifySignature(payload []byte, signature, secret string) bool {\n\th := hmac.New(sha256.New, []byte(secret))\n\th.Write(payload)\n\tcomputedSignature := hex.EncodeToString(h.Sum(nil))\n\treturn hmac.Equal([]byte(computedSignature), []byte(signature))\n}\n\nfunc webhookHandler(w http.ResponseWriter, r *http.Request) {\n\tif r.Method != "POST" {\n\t\thttp.Error(w, "Method not allowed", http.StatusMethodNotAllowed)\n\t\treturn\n\t}\n\n\tsignature := r.Header.Get("X-PayAngel-Signature")\n\tif signature == "" {\n\t\thttp.Error(w, "Missing signature header", http.StatusBadRequest)\n\t\treturn\n\t}\n\n\tbody, err := ioutil.ReadAll(r.Body)\n\tif err != nil {\n\t\thttp.Error(w, "Failed to read request body", http.StatusBadRequest)\n\t\treturn\n\t}\n\n\t// Verify signature\n\twebhookSecret := "your_webhook_secret"\n\tif !verifySignature(body, signature, webhookSecret) {\n\t\thttp.Error(w, "Invalid signature", http.StatusUnauthorized)\n\t\treturn\n\t}\n\n\t// Parse webhook payload\n\tvar payload WebhookPayload\n\tif err := json.Unmarshal(body, &payload); err != nil {\n\t\thttp.Error(w, "Failed to parse webhook payload", http.StatusBadRequest)\n\t\treturn\n\t}\n\n\t// Process the webhook\n\tswitch payload.Event {\n\tcase "disbursement.completed":\n\t\tlog.Printf("Transaction %s completed", payload.Data.TransactionID)\n\t\t// Handle completed disbursement\n\tcase "disbursement.failed":\n\t\tlog.Printf("Transaction %s failed", payload.Data.TransactionID)\n\t\t// Handle failed disbursement\n\tdefault:\n\t\tlog.Printf("Received webhook event: %s", payload.Event)\n\t}\n\n\t// Acknowledge receipt of the webhook\n\tw.WriteHeader(http.StatusOK)\n\tw.Write([]byte("Webhook received"))\n}\n\nfunc main() {\n\thttp.HandleFunc("/webhooks/payangel", webhookHandler)\n\tlog.Println("Webhook server listening on port 3000")\n\tlog.Fatal(http.ListenAndServe(":3000", nil))\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"java",children:"Java"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport spark.Request;\nimport spark.Response;\nimport spark.Spark;\n\nimport javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Formatter;\n\npublic class WebhookServer {\n    private static final String WEBHOOK_SECRET = "your_webhook_secret";\n    \n    public static void main(String[] args) {\n        Spark.port(3000);\n        Spark.post("/webhooks/payangel", WebhookServer::handleWebhook);\n    }\n    \n    private static Object handleWebhook(Request request, Response response) {\n        try {\n            // Get signature from header\n            String signature = request.headers("X-PayAngel-Signature");\n            if (signature == null || signature.isEmpty()) {\n                response.status(400);\n                return "Missing signature header";\n            }\n            \n            // Get request body\n            String body = request.body();\n            \n            // Verify signature\n            if (!verifySignature(body, signature)) {\n                response.status(401);\n                return "Invalid signature";\n            }\n            \n            // Parse webhook payload\n            ObjectMapper mapper = new ObjectMapper();\n            JsonNode payload = mapper.readTree(body);\n            \n            String event = payload.get("event").asText();\n            JsonNode data = payload.get("data");\n            String transactionId = data.get("transaction_id").asText();\n            \n            // Process the webhook\n            switch (event) {\n                case "disbursement.completed":\n                    System.out.println("Transaction " + transactionId + " completed");\n                    // Handle completed disbursement\n                    break;\n                case "disbursement.failed":\n                    System.out.println("Transaction " + transactionId + " failed");\n                    // Handle failed disbursement\n                    break;\n                default:\n                    System.out.println("Received webhook event: " + event);\n            }\n            \n            // Acknowledge receipt of the webhook\n            response.status(200);\n            return "Webhook received";\n        } catch (Exception e) {\n            e.printStackTrace();\n            response.status(500);\n            return "Internal server error";\n        }\n    }\n    \n    private static boolean verifySignature(String payload, String signature) {\n        try {\n            Mac mac = Mac.getInstance("HmacSHA256");\n            SecretKeySpec secretKey = new SecretKeySpec(WEBHOOK_SECRET.getBytes(StandardCharsets.UTF_8), "HmacSHA256");\n            mac.init(secretKey);\n            \n            byte[] hash = mac.doFinal(payload.getBytes(StandardCharsets.UTF_8));\n            String computedSignature = toHexString(hash);\n            \n            return computedSignature.equals(signature);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n    \n    private static String toHexString(byte[] bytes) {\n        Formatter formatter = new Formatter();\n        for (byte b : bytes) {\n            formatter.format("%02x", b);\n        }\n        String result = formatter.toString();\n        formatter.close();\n        return result;\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"best-practices-for-webhooks",children:"Best Practices for Webhooks"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Verify signatures"})," - Always verify webhook signatures to ensure they come from PayAngel"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Respond quickly"})," - Your webhook endpoint should respond within a few seconds"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Process asynchronously"})," - Handle complex processing outside the HTTP request cycle"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Implement idempotency"})," - Handle duplicate webhook notifications gracefully"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Store the raw payload"})," - Store the raw webhook payload for debugging and reference"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitor webhook failures"})," - Set up monitoring for webhook processing failures"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Implement retry logic"})," - PayAngel retries failed webhook deliveries, but you can implement your own retry logic too"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"testing-webhooks",children:"Testing Webhooks"}),"\n",(0,o.jsxs)(n.p,{children:["For testing webhooks locally, you can use tools like ",(0,o.jsx)(n.a,{href:"https://ngrok.com/",children:"ngrok"})," to expose your local server to the internet. This allows PayAngel to send webhook notifications to your local development environment."]}),"\n",(0,o.jsx)(n.h3,{id:"example-with-ngrok",children:"Example with ngrok"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Start your local webhook server:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"node webhook-server.js\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Start ngrok to expose your local server:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"ngrok http 3000\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Use the ngrok URL (e.g., ",(0,o.jsx)(n.code,{children:"https://abc123.ngrok.io/webhooks/payangel"}),") as your webhook URL when testing PayAngel API calls."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);