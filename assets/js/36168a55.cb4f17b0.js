"use strict";(self.webpackChunkpayangel_api_docs=self.webpackChunkpayangel_api_docs||[]).push([[370],{887:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>o});var s=t(758);const r={},a=s.createContext(r);function i(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),s.createElement(a.Provider,{value:e},n.children)}},8046:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/disbursement/status","title":"Transaction Status","description":"This endpoint allows you to check the status of a single transaction.","source":"@site/docs/api/disbursement/status.md","sourceDirName":"api/disbursement","slug":"/api/disbursement/status","permalink":"/payangel-api-docs/docs/api/disbursement/status","draft":false,"unlisted":false,"editUrl":"https://github.com/payincgroupltd/payangel-api-docs/tree/main/docs/api/disbursement/status.md","tags":[],"version":"current","frontMatter":{"id":"status","title":"Transaction Status","sidebar_label":"Transaction Status","slug":"/api/disbursement/status"},"sidebar":"apiSidebar","previous":{"title":"Bulk Transactions","permalink":"/payangel-api-docs/docs/api/disbursement/bulk-transaction"},"next":{"title":"JavaScript Examples","permalink":"/payangel-api-docs/docs/api/javascript/examples"}}');var r=t(6070),a=t(887);const i={id:"status",title:"Transaction Status",sidebar_label:"Transaction Status",slug:"/api/disbursement/status"},o="Transaction Status",c={},d=[{value:"Endpoint",id:"endpoint",level:2},{value:"Path Parameters",id:"path-parameters",level:2},{value:"Response",id:"response",level:2},{value:"Success Response",id:"success-response",level:3},{value:"Error Response",id:"error-response",level:3},{value:"Transaction Status Values",id:"transaction-status-values",level:2},{value:"Example Requests",id:"example-requests",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"TypeScript",id:"typescript",level:3},{value:"Go",id:"go",level:3}];function l(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"transaction-status",children:"Transaction Status"})}),"\n",(0,r.jsx)(e.p,{children:"This endpoint allows you to check the status of a single transaction."}),"\n",(0,r.jsx)(e.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"GET https://api.payangel.com/v1/disbursements/{transaction_id}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Type"}),(0,r.jsx)(e.th,{children:"Required"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsx)(e.tbody,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"transaction_id"})}),(0,r.jsx)(e.td,{children:"string"}),(0,r.jsx)(e.td,{children:"Yes"}),(0,r.jsx)(e.td,{children:"The unique identifier of the transaction"})]})})]}),"\n",(0,r.jsx)(e.h2,{id:"response",children:"Response"}),"\n",(0,r.jsx)(e.h3,{id:"success-response",children:"Success Response"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "status": "success",\n  "message": "Transaction details retrieved successfully",\n  "data": {\n    "transaction_id": "txn_123456789",\n    "reference": "your-reference",\n    "amount": 1000,\n    "fee": 10,\n    "total": 1010,\n    "currency": "GHS",\n    "status": "COMPLETED",\n    "destination_type": "bank_account",\n    "recipient": {\n      "name": "John Doe",\n      "email": "john.doe@example.com",\n      "phone": "+233501234567",\n      "bank_code": "GH123456",\n      "account_number": "1234567890"\n    },\n    "narration": "Salary payment",\n    "created_at": "2023-06-15T14:30:00Z",\n    "updated_at": "2023-06-15T15:30:00Z",\n    "completed_at": "2023-06-15T15:30:00Z"\n  }\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"error-response",children:"Error Response"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "status": "error",\n  "message": "Transaction not found",\n  "errors": [\n    {\n      "field": "transaction_id",\n      "message": "Transaction with ID txn_123456789 not found"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"transaction-status-values",children:"Transaction Status Values"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Status"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"PENDING"})}),(0,r.jsx)(e.td,{children:"Transaction has been received and is pending processing"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"PROCESSING"})}),(0,r.jsx)(e.td,{children:"Transaction is currently being processed"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"COMPLETED"})}),(0,r.jsx)(e.td,{children:"Transaction has been successfully completed"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"FAILED"})}),(0,r.jsx)(e.td,{children:"Transaction has failed"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"CANCELLED"})}),(0,r.jsx)(e.td,{children:"Transaction has been cancelled"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"example-requests",children:"Example Requests"}),"\n",(0,r.jsx)(e.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const axios = require('axios');\n\nasync function checkTransactionStatus(transactionId) {\n  try {\n    const response = await axios.get(`https://api.payangel.com/v1/disbursements/${transactionId}`, {\n      headers: {\n        'Authorization': 'Bearer YOUR_API_KEY',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error.response.data);\n    throw error;\n  }\n}\n\ncheckTransactionStatus('txn_123456789');\n"})}),"\n",(0,r.jsx)(e.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import axios from 'axios';\n\ninterface Recipient {\n  name: string;\n  email?: string;\n  phone: string;\n  bank_code?: string;\n  account_number?: string;\n  mobile_network?: string;\n  mobile_number?: string;\n}\n\ninterface TransactionResponse {\n  transaction_id: string;\n  reference: string;\n  amount: number;\n  fee: number;\n  total: number;\n  currency: string;\n  status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED' | 'CANCELLED';\n  destination_type: string;\n  recipient: Recipient;\n  narration: string;\n  created_at: string;\n  updated_at: string;\n  completed_at?: string;\n}\n\ninterface ApiResponse {\n  status: 'success' | 'error';\n  message: string;\n  data?: TransactionResponse;\n  errors?: Array<{\n    field: string;\n    message: string;\n  }>;\n}\n\nasync function checkTransactionStatus(transactionId: string): Promise<ApiResponse> {\n  try {\n    const response = await axios.get<ApiResponse>(\n      `https://api.payangel.com/v1/disbursements/${transactionId}`,\n      {\n        headers: {\n          'Authorization': 'Bearer YOUR_API_KEY',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Error:', error.response.data);\n      throw error.response.data;\n    }\n    throw error;\n  }\n}\n\ncheckTransactionStatus('txn_123456789')\n  .then(data => {\n    if (data.status === 'success' && data.data) {\n      console.log(`Transaction status: ${data.data.status}`);\n    }\n  })\n  .catch(error => console.error('Failed to check status:', error));\n"})}),"\n",(0,r.jsx)(e.h3,{id:"go",children:"Go"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n\t"encoding/json"\n\t"fmt"\n\t"io/ioutil"\n\t"net/http"\n)\n\ntype Recipient struct {\n\tName          string `json:"name"`\n\tEmail         string `json:"email,omitempty"`\n\tPhone         string `json:"phone"`\n\tBankCode      string `json:"bank_code,omitempty"`\n\tAccountNumber string `json:"account_number,omitempty"`\n\tMobileNetwork string `json:"mobile_network,omitempty"`\n\tMobileNumber  string `json:"mobile_number,omitempty"`\n}\n\ntype TransactionResponse struct {\n\tTransactionID   string    `json:"transaction_id"`\n\tReference       string    `json:"reference"`\n\tAmount          float64   `json:"amount"`\n\tFee             float64   `json:"fee"`\n\tTotal           float64   `json:"total"`\n\tCurrency        string    `json:"currency"`\n\tStatus          string    `json:"status"`\n\tDestinationType string    `json:"destination_type"`\n\tRecipient       Recipient `json:"recipient"`\n\tNarration       string    `json:"narration"`\n\tCreatedAt       string    `json:"created_at"`\n\tUpdatedAt       string    `json:"updated_at"`\n\tCompletedAt     string    `json:"completed_at,omitempty"`\n}\n\ntype ApiResponse struct {\n\tStatus  string             `json:"status"`\n\tMessage string             `json:"message"`\n\tData    *TransactionResponse `json:"data,omitempty"`\n\tErrors  []struct {\n\t\tField   string `json:"field"`\n\t\tMessage string `json:"message"`\n\t} `json:"errors,omitempty"`\n}\n\nfunc checkTransactionStatus(transactionID, apiKey string) (*ApiResponse, error) {\n\turl := fmt.Sprintf("https://api.payangel.com/v1/disbursements/%s", transactionID)\n\t\n\t// Create a new request\n\treq, err := http.NewRequest("GET", url, nil)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("error creating request: %w", err)\n\t}\n\t\n\t// Add authorization header\n\treq.Header.Add("Authorization", fmt.Sprintf("Bearer %s", apiKey))\n\treq.Header.Add("Content-Type", "application/json")\n\t\n\t// Send the request\n\tclient := &http.Client{}\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("error sending request: %w", err)\n\t}\n\tdefer resp.Body.Close()\n\t\n\t// Read response body\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("error reading response: %w", err)\n\t}\n\t\n\t// Handle non-200 responses\n\tif resp.StatusCode != http.StatusOK {\n\t\tvar errResp ApiResponse\n\t\tif err := json.Unmarshal(body, &errResp); err != nil {\n\t\t\treturn nil, fmt.Errorf("error parsing error response: %w", err)\n\t\t}\n\t\treturn &errResp, fmt.Errorf("API error: %s", errResp.Message)\n\t}\n\t\n\t// Parse response\n\tvar response ApiResponse\n\tif err := json.Unmarshal(body, &response); err != nil {\n\t\treturn nil, fmt.Errorf("error parsing response: %w", err)\n\t}\n\t\n\treturn &response, nil\n}\n\nfunc main() {\n\tapiKey := "your_api_key_here"\n\ttransactionID := "txn_123456789"\n\t\n\tresponse, err := checkTransactionStatus(transactionID, apiKey)\n\tif err != nil {\n\t\tfmt.Printf("Error: %v\\n", err)\n\t\treturn\n\t}\n\t\n\tif response.Status == "success" && response.Data != nil {\n\t\tfmt.Printf("Transaction status: %s\\n", response.Data.Status)\n\t\tfmt.Printf("Amount: %.2f %s\\n", response.Data.Amount, response.Data.Currency)\n\t\tfmt.Printf("Created at: %s\\n", response.Data.CreatedAt)\n\t\tif response.Data.CompletedAt != "" {\n\t\t\tfmt.Printf("Completed at: %s\\n", response.Data.CompletedAt)\n\t\t}\n\t} else {\n\t\tfmt.Printf("Error: %s\\n", response.Message)\n\t\tfor _, err := range response.Errors {\n\t\t\tfmt.Printf("- %s: %s\\n", err.Field, err.Message)\n\t\t}\n\t}\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}}}]);