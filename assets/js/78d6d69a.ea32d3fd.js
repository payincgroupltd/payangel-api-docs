"use strict";(self.webpackChunkpayangel_api_docs=self.webpackChunkpayangel_api_docs||[]).push([[144],{193:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/disbursement/bulk-transaction","title":"Bulk Disbursement Transactions","description":"This endpoint allows you to create multiple disbursement transactions in a single API call.","source":"@site/docs/api/disbursement/bulk-transaction.md","sourceDirName":"api/disbursement","slug":"/api/disbursement/bulk-transaction","permalink":"/payangel-api-docs/docs/api/disbursement/bulk-transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/payincgroupltd/payangel-api-docs/tree/main/docs/api/disbursement/bulk-transaction.md","tags":[],"version":"current","frontMatter":{"id":"bulk-transaction","title":"Bulk Disbursement Transactions","sidebar_label":"Bulk Transactions","slug":"/api/disbursement/bulk-transaction"},"sidebar":"apiSidebar","previous":{"title":"Single Transaction","permalink":"/payangel-api-docs/docs/api/disbursement/single-transaction"},"next":{"title":"Transaction Status","permalink":"/payangel-api-docs/docs/api/disbursement/status"}}');var r=s(6070),i=s(887);const c={id:"bulk-transaction",title:"Bulk Disbursement Transactions",sidebar_label:"Bulk Transactions",slug:"/api/disbursement/bulk-transaction"},a="Bulk Disbursement Transactions",d={},o=[{value:"Endpoint",id:"endpoint",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Transaction Object",id:"transaction-object",level:3},{value:"Recipient Object",id:"recipient-object",level:3},{value:"Response",id:"response",level:2},{value:"Success Response",id:"success-response",level:3},{value:"Error Response",id:"error-response",level:3},{value:"Example Requests",id:"example-requests",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"TypeScript",id:"typescript",level:3},{value:"Limitations",id:"limitations",level:2},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"bulk-disbursement-transactions",children:"Bulk Disbursement Transactions"})}),"\n",(0,r.jsx)(n.p,{children:"This endpoint allows you to create multiple disbursement transactions in a single API call."}),"\n",(0,r.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"POST https://api.payangel.com/v1/disbursements/bulk\n"})}),"\n",(0,r.jsx)(n.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"batch_reference"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Your unique reference for this batch"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"source_account"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Your PayAngel account to debit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"transactions"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Array of transaction objects"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"callback_url"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"URL to receive status updates via webhook"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"transaction-object",children:"Transaction Object"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"reference"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Your unique reference for this transaction"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"amount"})}),(0,r.jsx)(n.td,{children:"number"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Amount to be transferred"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"currency"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Currency code (e.g., GHS, NGN, USD)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"destination_type"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Type of destination (",(0,r.jsx)(n.code,{children:"bank_account"}),", ",(0,r.jsx)(n.code,{children:"mobile_money"}),", ",(0,r.jsx)(n.code,{children:"cash_pickup"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"recipient"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Recipient information"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"narration"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Purpose of the transfer"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"recipient-object",children:"Recipient Object"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Recipient's full name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"email"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Recipient's email address"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"phone"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Recipient's phone number"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"address"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Recipient's physical address"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bank_code"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Conditional"}),(0,r.jsx)(n.td,{children:"Required for bank transfers"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"account_number"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Conditional"}),(0,r.jsx)(n.td,{children:"Required for bank transfers"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mobile_network"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Conditional"}),(0,r.jsx)(n.td,{children:"Required for mobile money transfers"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mobile_number"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Conditional"}),(0,r.jsx)(n.td,{children:"Required for mobile money transfers"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,r.jsx)(n.h3,{id:"success-response",children:"Success Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "message": "Bulk transactions created successfully",\n  "data": {\n    "batch_id": "batch_123456789",\n    "transactions": [\n      {\n        "transaction_id": "txn_123456789",\n        "reference": "your-reference-1",\n        "amount": 1000,\n        "fee": 10,\n        "total": 1010,\n        "currency": "GHS",\n        "status": "PENDING",\n        "created_at": "2023-06-15T14:30:00Z",\n        "estimated_delivery": "2023-06-15T15:30:00Z"\n      },\n      {\n        "transaction_id": "txn_987654321",\n        "reference": "your-reference-2",\n        "amount": 500,\n        "fee": 5,\n        "total": 505,\n        "currency": "GHS",\n        "status": "PENDING",\n        "created_at": "2023-06-15T14:30:00Z",\n        "estimated_delivery": "2023-06-15T15:30:00Z"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response",children:"Error Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "error",\n  "message": "Failed to create bulk transactions",\n  "errors": [\n    {\n      "field": "transactions[0].recipient.account_number",\n      "message": "Account number is invalid"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-requests",children:"Example Requests"}),"\n",(0,r.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const axios = require('axios');\n\nasync function createBulkDisbursement() {\n  try {\n    const response = await axios.post('https://api.payangel.com/v1/disbursements/bulk', {\n      batch_reference: `batch-${Date.now()}`,\n      source_account: 'acc_123456789',\n      callback_url: 'https://your-website.com/webhooks/payangel',\n      transactions: [\n        {\n          reference: `tx1-${Date.now()}`,\n          amount: 1000,\n          currency: 'GHS',\n          destination_type: 'bank_account',\n          recipient: {\n            name: 'John Doe',\n            email: 'john.doe@example.com',\n            phone: '+233501234567',\n            bank_code: 'GH123456',\n            account_number: '1234567890'\n          },\n          narration: 'Salary payment'\n        },\n        {\n          reference: `tx2-${Date.now()}`,\n          amount: 500,\n          currency: 'GHS',\n          destination_type: 'mobile_money',\n          recipient: {\n            name: 'Jane Smith',\n            phone: '+233507654321',\n            mobile_network: 'MTN',\n            mobile_number: '0507654321'\n          },\n          narration: 'Commission payment'\n        }\n      ]\n    }, {\n      headers: {\n        'Authorization': 'Bearer YOUR_API_KEY',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    console.log(response.data);\n  } catch (error) {\n    console.error('Error:', error.response.data);\n  }\n}\n\ncreateBulkDisbursement();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import axios from 'axios';\n\ninterface Recipient {\n  name: string;\n  email?: string;\n  phone: string;\n  bank_code?: string;\n  account_number?: string;\n  mobile_network?: string;\n  mobile_number?: string;\n}\n\ninterface Transaction {\n  reference: string;\n  amount: number;\n  currency: string;\n  destination_type: 'bank_account' | 'mobile_money' | 'cash_pickup';\n  recipient: Recipient;\n  narration: string;\n}\n\ninterface BulkDisbursementRequest {\n  batch_reference: string;\n  source_account: string;\n  callback_url?: string;\n  transactions: Transaction[];\n}\n\nasync function createBulkDisbursement() {\n  try {\n    const transactions: Transaction[] = [\n      {\n        reference: `tx1-${Date.now()}`,\n        amount: 1000,\n        currency: 'GHS',\n        destination_type: 'bank_account',\n        recipient: {\n          name: 'John Doe',\n          email: 'john.doe@example.com',\n          phone: '+233501234567',\n          bank_code: 'GH123456',\n          account_number: '1234567890'\n        },\n        narration: 'Salary payment'\n      },\n      {\n        reference: `tx2-${Date.now()}`,\n        amount: 500,\n        currency: 'GHS',\n        destination_type: 'mobile_money',\n        recipient: {\n          name: 'Jane Smith',\n          phone: '+233507654321',\n          mobile_network: 'MTN',\n          mobile_number: '0507654321'\n        },\n        narration: 'Commission payment'\n      }\n    ];\n    \n    const requestData: BulkDisbursementRequest = {\n      batch_reference: `batch-${Date.now()}`,\n      source_account: 'acc_123456789',\n      callback_url: 'https://your-website.com/webhooks/payangel',\n      transactions\n    };\n    \n    const response = await axios.post(\n      'https://api.payangel.com/v1/disbursements/bulk',\n      requestData,\n      {\n        headers: {\n          'Authorization': 'Bearer YOUR_API_KEY',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    console.log(response.data);\n  } catch (error) {\n    console.error('Error:', error.response?.data || error.message);\n  }\n}\n\ncreateBulkDisbursement();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maximum of 500 transactions per batch"}),"\n",(0,r.jsx)(n.li,{children:"All transactions must use the same source account"}),"\n",(0,r.jsx)(n.li,{children:"All transactions must be created with a unique reference"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Unique References"}),": Ensure each transaction in the batch has a unique reference to avoid duplication."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Handle Partial Success"}),": Some transactions in a batch may succeed while others fail. Always check the status of each transaction."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Webhook Integration"}),": Use webhooks to receive real-time updates about the status of each transaction in the batch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pagination"}),": When retrieving large batches, use pagination to manage the response size."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},887:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(758);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);