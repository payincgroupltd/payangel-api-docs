"use strict";(self.webpackChunkpayangel_api_docs=self.webpackChunkpayangel_api_docs||[]).push([[350],{887:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(758);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},5489:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/disbursement/single-transaction","title":"Single Disbursement Transaction","description":"This endpoint allows you to create a single disbursement transaction to transfer funds to a recipient.","source":"@site/docs/api/disbursement/single-transaction.md","sourceDirName":"api/disbursement","slug":"/api/disbursement/single-transaction","permalink":"/payangel-api-docs/docs/api/disbursement/single-transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/payincgroupltd/payangel-api-docs/tree/main/docs/api/disbursement/single-transaction.md","tags":[],"version":"current","frontMatter":{"id":"single-transaction","title":"Single Disbursement Transaction","sidebar_label":"Single Transaction","slug":"/api/disbursement/single-transaction"},"sidebar":"apiSidebar","previous":{"title":"Overview","permalink":"/payangel-api-docs/docs/api/disbursement/overview"},"next":{"title":"Bulk Transactions","permalink":"/payangel-api-docs/docs/api/disbursement/bulk-transaction"}}');var s=r(6070),i=r(887);const a={id:"single-transaction",title:"Single Disbursement Transaction",sidebar_label:"Single Transaction",slug:"/api/disbursement/single-transaction"},o="Single Disbursement Transaction",d={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Response",id:"response",level:2},{value:"Success Response",id:"success-response",level:3},{value:"Error Response",id:"error-response",level:3},{value:"Example Requests",id:"example-requests",level:2},{value:"Bank Transfer",id:"bank-transfer",level:3},{value:"JavaScript",id:"javascript",level:4},{value:"TypeScript",id:"typescript",level:4},{value:"Go",id:"go",level:4},{value:"Java",id:"java",level:4},{value:"Mobile Money Transfer",id:"mobile-money-transfer",level:3},{value:"JavaScript",id:"javascript-1",level:4},{value:"Idempotency",id:"idempotency",level:2}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"single-disbursement-transaction",children:"Single Disbursement Transaction"})}),"\n",(0,s.jsx)(n.p,{children:"This endpoint allows you to create a single disbursement transaction to transfer funds to a recipient."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"POST https://api.payangel.com/v1/disbursements/single\n"})}),"\n",(0,s.jsx)(n.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transactionId"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Unique ID for payout transaction"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"senderFirstName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The first name of the sender"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"senderMiddlename"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"The middle name of the sender"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"senderLastName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The last name of the sender"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"senderPhone"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Phone number of the sender"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"countryTo"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The destination ISO country code. e.g. GH"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"countryFrom"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The origination ISO country code. e.g. US"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sendingCurrency"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The currency code of the sender e.g. USD"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receivingCurrency"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The currency code of the receiver e.g. GHS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"destinationAmount"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The amount to be sent to receiver"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"beneficiaryFirstName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The beneficiary first name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"beneficiaryMiddleName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"The beneficiary middle name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"beneficiaryLastName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The beneficiary last name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transferType"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The type of transaction. Possible values are: Mobile or Bank"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bankAccountNumber"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No*"}),(0,s.jsx)(n.td,{children:"The recipient bank account number"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bankName"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No*"}),(0,s.jsx)(n.td,{children:"The recipient bank name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bankBranch"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No*"}),(0,s.jsx)(n.td,{children:"The recipient bank branch"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bankCode"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No*"}),(0,s.jsxs)(n.td,{children:["The recipient bank code. ",(0,s.jsx)(n.a,{href:"/docs/api/disbursement/bank-codes",children:"See Bank Codes"})," for list of PayAngel bank codes"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mobileNetwork"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No**"}),(0,s.jsx)(n.td,{children:"The beneficiary mobile money network"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mobileNumber"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No**"}),(0,s.jsx)(n.td,{children:"The beneficiary mobile money number"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transferReason"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The reason for the payout"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"callbackurl"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"The callback URL to receive response customer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ref"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"The sender/customer reference number"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"purposeDetails"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Additional details about the transaction"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["* ",(0,s.jsx)(n.em,{children:"When the transferType is Bank, the bankAccountNumber, bankName, bankBranch and bankCode are required."}),(0,s.jsx)(n.br,{}),"\n","** ",(0,s.jsx)(n.em,{children:"When the transferType is Mobile, the mobileNetwork and mobileNumber are required."}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.em,{children:"The optional fields can be left blank or not included in the request."})]}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.h3,{id:"success-response",children:"Success Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "message": "Transaction created successfully",\n  "data": {\n    "transaction_id": "txn_123456789",\n    "reference": "your-reference",\n    "amount": 1000,\n    "fee": 10,\n    "total": 1010,\n    "currency": "GHS",\n    "status": "PENDING",\n    "created_at": "2023-06-15T14:30:00Z",\n    "estimated_delivery": "2023-06-15T15:30:00Z"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-response",children:"Error Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": "error",\n  "message": "Invalid destination account",\n  "errors": [\n    {\n      "field": "bankAccountNumber",\n      "message": "Account number is invalid"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"example-requests",children:"Example Requests"}),"\n",(0,s.jsx)(n.h3,{id:"bank-transfer",children:"Bank Transfer"}),"\n",(0,s.jsx)(n.h4,{id:"javascript",children:"JavaScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const axios = require(\'axios\');\n\nasync function createDisbursement() {\n  try {\n    const response = await axios.post(\'https://api.payangel.com/v1/disbursements/single\', {\n      transactionId: "PAY-123456789",\n      senderFirstName: "John",\n      senderLastName: "Doe",\n      senderPhone: "+16175551234",\n      countryTo: "GH",\n      countryFrom: "US",\n      sendingCurrency: "USD",\n      receivingCurrency: "GHS",\n      destinationAmount: 1000,\n      beneficiaryFirstName: "Jane",\n      beneficiaryLastName: "Smith",\n      transferType: "Bank",\n      bankAccountNumber: "1234567890",\n      bankName: "STANDARD CHARTERED BANK",\n      bankBranch: "HIGH STREET",\n      bankCode: "300302",\n      transferReason: "Family Support",\n      ref: "INV-001-PAYMENT",\n      purposeDetails: "Monthly allowance"\n    }, {\n      headers: {\n        \'Authorization\': \'Bearer YOUR_API_KEY\',\n        \'Content-Type\': \'application/json\'\n      }\n    });\n    \n    console.log(response.data);\n  } catch (error) {\n    console.error(\'Error:\', error.response.data);\n  }\n}\n\ncreateDisbursement();\n'})}),"\n",(0,s.jsx)(n.h4,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import axios from \'axios\';\n\ninterface DisbursementRequest {\n  transactionId: string;\n  senderFirstName: string;\n  senderMiddlename?: string;\n  senderLastName: string;\n  senderPhone?: string;\n  countryTo: string;\n  countryFrom: string;\n  sendingCurrency: string;\n  receivingCurrency: string;\n  destinationAmount: number;\n  beneficiaryFirstName: string;\n  beneficiaryMiddleName?: string;\n  beneficiaryLastName: string;\n  transferType: \'Bank\' | \'Mobile\';\n  bankAccountNumber?: string;\n  bankName?: string;\n  bankBranch?: string;\n  bankCode?: string;\n  mobileNetwork?: string;\n  mobileNumber?: string;\n  transferReason: string;\n  callbackurl?: string;\n  ref: string;\n  purposeDetails?: string;\n}\n\nasync function createDisbursement() {\n  try {\n    const requestData: DisbursementRequest = {\n      transactionId: "PAY-123456789",\n      senderFirstName: "John",\n      senderLastName: "Doe",\n      senderPhone: "+16175551234",\n      countryTo: "GH",\n      countryFrom: "US",\n      sendingCurrency: "USD",\n      receivingCurrency: "GHS",\n      destinationAmount: 1000,\n      beneficiaryFirstName: "Jane",\n      beneficiaryLastName: "Smith",\n      transferType: "Bank",\n      bankAccountNumber: "1234567890",\n      bankName: "STANDARD CHARTERED BANK",\n      bankBranch: "HIGH STREET",\n      bankCode: "300302",\n      transferReason: "Family Support",\n      ref: "INV-001-PAYMENT",\n      purposeDetails: "Monthly allowance"\n    };\n    \n    const response = await axios.post(\n      \'https://api.payangel.com/v1/disbursements/single\',\n      requestData,\n      {\n        headers: {\n          \'Authorization\': \'Bearer YOUR_API_KEY\',\n          \'Content-Type\': \'application/json\'\n        }\n      }\n    );\n    \n    console.log(response.data);\n  } catch (error) {\n    console.error(\'Error:\', error.response?.data || error.message);\n  }\n}\n\ncreateDisbursement();\n'})}),"\n",(0,s.jsx)(n.h4,{id:"go",children:"Go"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"bytes"\n\t"encoding/json"\n\t"fmt"\n\t"io/ioutil"\n\t"net/http"\n)\n\ntype DisbursementRequest struct {\n\tTransactionId        string  `json:"transactionId"`\n\tSenderFirstName      string  `json:"senderFirstName"`\n\tSenderMiddlename     string  `json:"senderMiddlename,omitempty"`\n\tSenderLastName       string  `json:"senderLastName"`\n\tSenderPhone          string  `json:"senderPhone,omitempty"`\n\tCountryTo            string  `json:"countryTo"`\n\tCountryFrom          string  `json:"countryFrom"`\n\tSendingCurrency      string  `json:"sendingCurrency"`\n\tReceivingCurrency    string  `json:"receivingCurrency"`\n\tDestinationAmount    float64 `json:"destinationAmount"`\n\tBeneficiaryFirstName string  `json:"beneficiaryFirstName"`\n\tBeneficiaryMiddleName string `json:"beneficiaryMiddleName,omitempty"`\n\tBeneficiaryLastName  string  `json:"beneficiaryLastName"`\n\tTransferType         string  `json:"transferType"`\n\tBankAccountNumber    string  `json:"bankAccountNumber,omitempty"`\n\tBankName             string  `json:"bankName,omitempty"`\n\tBankBranch           string  `json:"bankBranch,omitempty"`\n\tBankCode             string  `json:"bankCode,omitempty"`\n\tTransferReason       string  `json:"transferReason"`\n\tRef                  string  `json:"ref"`\n\tPurposeDetails       string  `json:"purposeDetails,omitempty"`\n}\n\nfunc main() {\n\t// Create request payload\n\trequestData := DisbursementRequest{\n\t\tTransactionId:        "PAY-123456789",\n\t\tSenderFirstName:      "John",\n\t\tSenderLastName:       "Doe",\n\t\tSenderPhone:          "+16175551234",\n\t\tCountryTo:            "GH",\n\t\tCountryFrom:          "US",\n\t\tSendingCurrency:      "USD",\n\t\tReceivingCurrency:    "GHS",\n\t\tDestinationAmount:    1000,\n\t\tBeneficiaryFirstName: "Jane",\n\t\tBeneficiaryLastName:  "Smith",\n\t\tTransferType:         "Bank",\n\t\tBankAccountNumber:    "1234567890",\n\t\tBankName:             "STANDARD CHARTERED BANK",\n\t\tBankBranch:           "HIGH STREET",\n\t\tBankCode:             "300302",\n\t\tTransferReason:       "Family Support",\n\t\tRef:                  "INV-001-PAYMENT",\n\t\tPurposeDetails:       "Monthly allowance",\n\t}\n\n\t// Convert to JSON\n\tjsonData, err := json.Marshal(requestData)\n\tif err != nil {\n\t\tfmt.Println("Error marshaling JSON:", err)\n\t\treturn\n\t}\n\n\t// Create request\n\turl := "https://api.payangel.com/v1/disbursements/single"\n\treq, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonData))\n\tif err != nil {\n\t\tfmt.Println("Error creating request:", err)\n\t\treturn\n\t}\n\n\t// Add headers\n\treq.Header.Add("Authorization", "Bearer YOUR_API_KEY")\n\treq.Header.Add("Content-Type", "application/json")\n\n\t// Send request\n\tclient := &http.Client{}\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tfmt.Println("Error sending request:", err)\n\t\treturn\n\t}\n\tdefer resp.Body.Close()\n\n\t// Read response\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tfmt.Println("Error reading response:", err)\n\t\treturn\n\t}\n\n\tfmt.Println(string(body))\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"java",children:"Java"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Scanner;\n\npublic class PayAngelDisbursement {\n    public static void main(String[] args) {\n        try {\n            // Create connection\n            URL url = new URL("https://api.payangel.com/v1/disbursements/single");\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod("POST");\n            conn.setRequestProperty("Content-Type", "application/json");\n            conn.setRequestProperty("Authorization", "Bearer YOUR_API_KEY");\n            conn.setDoOutput(true);\n\n            // Create JSON payload\n            String jsonPayload = "{"\n                + "\\"transactionId\\": \\"PAY-123456789\\","\n                + "\\"senderFirstName\\": \\"John\\","\n                + "\\"senderLastName\\": \\"Doe\\","\n                + "\\"senderPhone\\": \\"+16175551234\\","\n                + "\\"countryTo\\": \\"GH\\","\n                + "\\"countryFrom\\": \\"US\\","\n                + "\\"sendingCurrency\\": \\"USD\\","\n                + "\\"receivingCurrency\\": \\"GHS\\","\n                + "\\"destinationAmount\\": 1000,"\n                + "\\"beneficiaryFirstName\\": \\"Jane\\","\n                + "\\"beneficiaryLastName\\": \\"Smith\\","\n                + "\\"transferType\\": \\"Bank\\","\n                + "\\"bankAccountNumber\\": \\"1234567890\\","\n                + "\\"bankName\\": \\"STANDARD CHARTERED BANK\\","\n                + "\\"bankBranch\\": \\"HIGH STREET\\","\n                + "\\"bankCode\\": \\"300302\\","\n                + "\\"transferReason\\": \\"Family Support\\","\n                + "\\"ref\\": \\"INV-001-PAYMENT\\","\n                + "\\"purposeDetails\\": \\"Monthly allowance\\""\n                + "}";\n\n            // Write payload to connection\n            try (OutputStream os = conn.getOutputStream()) {\n                byte[] input = jsonPayload.getBytes(StandardCharsets.UTF_8);\n                os.write(input, 0, input.length);\n            }\n\n            // Read response\n            int responseCode = conn.getResponseCode();\n            StringBuilder response = new StringBuilder();\n            try (Scanner scanner = new Scanner(conn.getInputStream(), StandardCharsets.UTF_8.name())) {\n                while (scanner.hasNextLine()) {\n                    response.append(scanner.nextLine());\n                }\n            }\n\n            System.out.println("Response Code: " + responseCode);\n            System.out.println("Response: " + response.toString());\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"mobile-money-transfer",children:"Mobile Money Transfer"}),"\n",(0,s.jsx)(n.h4,{id:"javascript-1",children:"JavaScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const axios = require(\'axios\');\n\nasync function createMobileMoneyDisbursement() {\n  try {\n    const response = await axios.post(\'https://api.payangel.com/v1/disbursements/single\', {\n      transactionId: "PAY-987654321",\n      senderFirstName: "John",\n      senderLastName: "Doe",\n      senderPhone: "+16175551234",\n      countryTo: "GH",\n      countryFrom: "US",\n      sendingCurrency: "USD",\n      receivingCurrency: "GHS",\n      destinationAmount: 500,\n      beneficiaryFirstName: "Jane",\n      beneficiaryLastName: "Smith",\n      transferType: "Mobile",\n      mobileNetwork: "MTN",\n      mobileNumber: "0551234567",\n      transferReason: "Gift",\n      ref: "MOMO-PAYMENT-001",\n      purposeDetails: "Birthday gift"\n    }, {\n      headers: {\n        \'Authorization\': \'Bearer YOUR_API_KEY\',\n        \'Content-Type\': \'application/json\'\n      }\n    });\n    \n    console.log(response.data);\n  } catch (error) {\n    console.error(\'Error:\', error.response.data);\n  }\n}\n\ncreateMobileMoneyDisbursement();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"idempotency",children:"Idempotency"}),"\n",(0,s.jsx)(n.p,{children:"To prevent duplicate transactions, you should use your own unique reference for each transaction. If you submit multiple requests with the same reference, only the first one will be processed, and subsequent requests will return the result of the original request."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);